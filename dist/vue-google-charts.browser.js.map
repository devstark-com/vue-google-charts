{"version":3,"file":"vue-google-charts.browser.js","sources":["../src/lib/google-charts-loader.js","../src/components/GChart.vue","../src/components/GChart.vue?vue&type=template&id=92e3a6f4&lang.js","../src/wrapper.js"],"sourcesContent":["/**\n * Usage:\n * import { loadGoogleCharts } from 'vue-google-charts'\n *\n * loadGoogleCharts('current', { packages: ['corechart', 'map'] })\n *  .then(google => {\n *    const chart = new google.visualization.Map ...\n *  })\n */\n\nconst chartsScriptUrl = 'https://www.gstatic.com/charts/loader.js'\n\nlet chartsLoaderPromise = null\nconst loadedPackages = new Map()\n\nexport function getChartsLoader () {\n  // If already included in the page:\n  if (window.google && window.google.charts) {\n    return Promise.resolve(window.google.charts)\n  }\n  if (!chartsLoaderPromise) {\n    chartsLoaderPromise = new Promise(resolve => {\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.onload = () => resolve(window.google.charts)\n      script.src = chartsScriptUrl\n      document.body.appendChild(script)\n    })\n  }\n  return chartsLoaderPromise\n}\n\nexport default function loadGoogleCharts (version = 'current', settings = {}) {\n  return getChartsLoader().then(loader => {\n    if (typeof settings !== 'object') throw new Error('Google Charts loader: settings must be an object')\n    const settingsKey = version + '_' + JSON.stringify(settings, Object.keys(settings).sort())\n\n    if (loadedPackages.has(settingsKey)) return loadedPackages.get(settingsKey)\n\n    const loaderPromise = new Promise(resolve => {\n      loader.load(version, settings)\n      loader.setOnLoadCallback(() => resolve(window.google))\n    })\n    loadedPackages.set(settingsKey, loaderPromise)\n    return loaderPromise\n  })\n}\n","<template>\n  <div ref=\"chart\" />\n</template>\n\n<script>\nimport loadGoogleCharts from '../lib/google-charts-loader'\nimport debounce from 'debounce'\nlet chartsLib = null\nexport default {\n  name: 'GChart',\n\n  props: {\n    type: {\n      type: String,\n      required: true\n    },\n    data: {\n      type: [Array, Object],\n      default: () => []\n    },\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    version: {\n      type: String,\n      default: 'current'\n    },\n    settings: {\n      type: Object,\n      default: () => ({\n        packages: ['corechart', 'table']\n      })\n    },\n    events: {\n      type: Object,\n      default: () => ({})\n    },\n    createChart: {\n      type: Function,\n      default: () => ({})\n    },\n    resizeDebounce: {\n      type: Number,\n      default: 200\n    }\n  },\n\n  data () {\n    return {\n      chartObject: null\n    }\n  },\n\n  watch: {\n    data: {\n      deep: true,\n      handler () {\n        this.drawChart()\n      }\n    },\n    options: {\n      deep: true,\n      handler () {\n        this.drawChart()\n      }\n    },\n    type (value) {\n      this.createChartObject()\n      this.drawChart()\n    }\n  },\n\n  mounted () {\n    loadGoogleCharts(this.version, this.settings).then(api => {\n      chartsLib = api\n      const chart = this.createChartObject()\n      this.$emit('ready', chart, api)\n      this.drawChart()\n    })\n    if (this.resizeDebounce > 0) window.addEventListener('resize', debounce(this.drawChart, this.resizeDebounce))\n  },\n\n  beforeDestroy () {\n    if (this.chartObject && typeof this.chartObject.clearChart === 'function') {\n      this.chartObject.clearChart()\n    }\n  },\n\n  methods: {\n    drawChart () {\n      if (!chartsLib || !this.chartObject) return\n      const data = this.getValidChartData()\n      if (data) this.chartObject.draw(data, this.options)\n    },\n\n    getValidChartData () {\n      if (this.data instanceof chartsLib.visualization.DataTable) return this.data\n      if (this.data instanceof chartsLib.visualization.DataView) return this.data\n      if (Array.isArray(this.data)) return chartsLib.visualization.arrayToDataTable(this.data)\n      if (this.data !== null && typeof this.data === 'object') return new chartsLib.visualization.DataTable(this.data)\n      return null\n    },\n\n    createChartObject () {\n      const createChart = (el, google, type) => {\n        if (!type) throw new Error('please, provide chart type property')\n        return new google.visualization[type](el)\n      }\n      const fn = this.createChart || createChart\n      this.chartObject = fn(this.$refs.chart, chartsLib, this.type)\n      this.attachListeners()\n      return this.chartObject\n    },\n\n    attachListeners () {\n      if (!this.events) return\n      Object.entries(this.events).forEach(([event, listener]) => {\n        chartsLib.visualization.events.addListener(this.chartObject, event, listener)\n      })\n    }\n  }\n}\n\n</script>\n","<template>\n  <div ref=\"chart\" />\n</template>\n\n<script>\nimport loadGoogleCharts from '../lib/google-charts-loader'\nimport debounce from 'debounce'\nlet chartsLib = null\nexport default {\n  name: 'GChart',\n\n  props: {\n    type: {\n      type: String,\n      required: true\n    },\n    data: {\n      type: [Array, Object],\n      default: () => []\n    },\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    version: {\n      type: String,\n      default: 'current'\n    },\n    settings: {\n      type: Object,\n      default: () => ({\n        packages: ['corechart', 'table']\n      })\n    },\n    events: {\n      type: Object,\n      default: () => ({})\n    },\n    createChart: {\n      type: Function,\n      default: () => ({})\n    },\n    resizeDebounce: {\n      type: Number,\n      default: 200\n    }\n  },\n\n  data () {\n    return {\n      chartObject: null\n    }\n  },\n\n  watch: {\n    data: {\n      deep: true,\n      handler () {\n        this.drawChart()\n      }\n    },\n    options: {\n      deep: true,\n      handler () {\n        this.drawChart()\n      }\n    },\n    type (value) {\n      this.createChartObject()\n      this.drawChart()\n    }\n  },\n\n  mounted () {\n    loadGoogleCharts(this.version, this.settings).then(api => {\n      chartsLib = api\n      const chart = this.createChartObject()\n      this.$emit('ready', chart, api)\n      this.drawChart()\n    })\n    if (this.resizeDebounce > 0) window.addEventListener('resize', debounce(this.drawChart, this.resizeDebounce))\n  },\n\n  beforeDestroy () {\n    if (this.chartObject && typeof this.chartObject.clearChart === 'function') {\n      this.chartObject.clearChart()\n    }\n  },\n\n  methods: {\n    drawChart () {\n      if (!chartsLib || !this.chartObject) return\n      const data = this.getValidChartData()\n      if (data) this.chartObject.draw(data, this.options)\n    },\n\n    getValidChartData () {\n      if (this.data instanceof chartsLib.visualization.DataTable) return this.data\n      if (this.data instanceof chartsLib.visualization.DataView) return this.data\n      if (Array.isArray(this.data)) return chartsLib.visualization.arrayToDataTable(this.data)\n      if (this.data !== null && typeof this.data === 'object') return new chartsLib.visualization.DataTable(this.data)\n      return null\n    },\n\n    createChartObject () {\n      const createChart = (el, google, type) => {\n        if (!type) throw new Error('please, provide chart type property')\n        return new google.visualization[type](el)\n      }\n      const fn = this.createChart || createChart\n      this.chartObject = fn(this.$refs.chart, chartsLib, this.type)\n      this.attachListeners()\n      return this.chartObject\n    },\n\n    attachListeners () {\n      if (!this.events) return\n      Object.entries(this.events).forEach(([event, listener]) => {\n        chartsLib.visualization.events.addListener(this.chartObject, event, listener)\n      })\n    }\n  }\n}\n\n</script>\n","import GChart from './components/GChart.vue';\n\nif (typeof Vue !== \"undefined\") {\n  Vue.component(\"GChart\", GChart)\n}\n"],"names":["chartsScriptUrl","chartsLoaderPromise","loadedPackages","Map","getChartsLoader","window","google","charts","Promise","resolve","script","document","createElement","type","onload","src","body","appendChild","loadGoogleCharts","version","settings","then","loader","Error","settingsKey","JSON","stringify","Object","keys","sort","has","get","loaderPromise","load","setOnLoadCallback","set","chartsLib","name","props","String","required","data","Array","default","options","packages","events","createChart","Function","resizeDebounce","Number","chartObject","watch","deep","handler","drawChart","value","createChartObject","mounted","api","chart","$emit","addEventListener","debounce","beforeDestroy","clearChart","methods","getValidChartData","draw","visualization","DataTable","DataView","isArray","arrayToDataTable","el","fn","$refs","attachListeners","entries","forEach","event","listener","addListener","ref","_createElementBlock","_hoisted_1","Vue","component","GChart"],"mappings":"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"}