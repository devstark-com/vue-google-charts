{"version":3,"file":"vue-google-charts.esm.js","sources":["../src/lib/google-charts-loader.js","../src/components/GChart.vue","../src/components/GChart.vue?vue&type=template&id=92e3a6f4&lang.js","../src/index.js"],"sourcesContent":["/**\n * Usage:\n * import { loadGoogleCharts } from 'vue-google-charts'\n *\n * loadGoogleCharts('current', { packages: ['corechart', 'map'] })\n *  .then(google => {\n *    const chart = new google.visualization.Map ...\n *  })\n */\n\nconst chartsScriptUrl = 'https://www.gstatic.com/charts/loader.js'\n\nlet chartsLoaderPromise = null\nconst loadedPackages = new Map()\n\nexport function getChartsLoader () {\n  // If already included in the page:\n  if (window.google && window.google.charts) {\n    return Promise.resolve(window.google.charts)\n  }\n  if (!chartsLoaderPromise) {\n    chartsLoaderPromise = new Promise(resolve => {\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.onload = () => resolve(window.google.charts)\n      script.src = chartsScriptUrl\n      document.body.appendChild(script)\n    })\n  }\n  return chartsLoaderPromise\n}\n\nexport default function loadGoogleCharts (version = 'current', settings = {}) {\n  return getChartsLoader().then(loader => {\n    if (typeof settings !== 'object') throw new Error('Google Charts loader: settings must be an object')\n    const settingsKey = version + '_' + JSON.stringify(settings, Object.keys(settings).sort())\n\n    if (loadedPackages.has(settingsKey)) return loadedPackages.get(settingsKey)\n\n    const loaderPromise = new Promise(resolve => {\n      loader.load(version, settings)\n      loader.setOnLoadCallback(() => resolve(window.google))\n    })\n    loadedPackages.set(settingsKey, loaderPromise)\n    return loaderPromise\n  })\n}\n","<template>\n  <div ref=\"chart\" />\n</template>\n\n<script>\nimport loadGoogleCharts from '../lib/google-charts-loader'\nimport debounce from 'debounce'\nlet chartsLib = null\nexport default {\n  name: 'GChart',\n\n  props: {\n    type: {\n      type: String,\n      required: true\n    },\n    data: {\n      type: [Array, Object],\n      default: () => []\n    },\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    version: {\n      type: String,\n      default: 'current'\n    },\n    settings: {\n      type: Object,\n      default: () => ({\n        packages: ['corechart', 'table']\n      })\n    },\n    events: {\n      type: Object,\n      default: () => ({})\n    },\n    createChart: {\n      type: Function,\n      default: () => ({})\n    },\n    resizeDebounce: {\n      type: Number,\n      default: 200\n    }\n  },\n\n  data () {\n    return {\n      chartObject: null\n    }\n  },\n\n  watch: {\n    data: {\n      deep: true,\n      handler () {\n        this.drawChart()\n      }\n    },\n    options: {\n      deep: true,\n      handler () {\n        this.drawChart()\n      }\n    },\n    type (value) {\n      this.createChartObject()\n      this.drawChart()\n    }\n  },\n\n  mounted () {\n    loadGoogleCharts(this.version, this.settings).then(api => {\n      chartsLib = api\n      const chart = this.createChartObject()\n      this.$emit('ready', chart, api)\n      this.drawChart()\n    })\n    if (this.resizeDebounce > 0) window.addEventListener('resize', debounce(this.drawChart, this.resizeDebounce))\n  },\n\n  beforeDestroy () {\n    if (this.chartObject && typeof this.chartObject.clearChart === 'function') {\n      this.chartObject.clearChart()\n    }\n  },\n\n  methods: {\n    drawChart () {\n      if (!chartsLib || !this.chartObject) return\n      const data = this.getValidChartData()\n      if (data) this.chartObject.draw(data, this.options)\n    },\n\n    getValidChartData () {\n      if (this.data instanceof chartsLib.visualization.DataTable) return this.data\n      if (this.data instanceof chartsLib.visualization.DataView) return this.data\n      if (Array.isArray(this.data)) return chartsLib.visualization.arrayToDataTable(this.data)\n      if (this.data !== null && typeof this.data === 'object') return new chartsLib.visualization.DataTable(this.data)\n      return null\n    },\n\n    createChartObject () {\n      const createChart = (el, google, type) => {\n        if (!type) throw new Error('please, provide chart type property')\n        return new google.visualization[type](el)\n      }\n      const fn = this.createChart || createChart\n      this.chartObject = fn(this.$refs.chart, chartsLib, this.type)\n      this.attachListeners()\n      return this.chartObject\n    },\n\n    attachListeners () {\n      if (!this.events) return\n      Object.entries(this.events).forEach(([event, listener]) => {\n        chartsLib.visualization.events.addListener(this.chartObject, event, listener)\n      })\n    }\n  }\n}\n\n</script>\n","<template>\n  <div ref=\"chart\" />\n</template>\n\n<script>\nimport loadGoogleCharts from '../lib/google-charts-loader'\nimport debounce from 'debounce'\nlet chartsLib = null\nexport default {\n  name: 'GChart',\n\n  props: {\n    type: {\n      type: String,\n      required: true\n    },\n    data: {\n      type: [Array, Object],\n      default: () => []\n    },\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    version: {\n      type: String,\n      default: 'current'\n    },\n    settings: {\n      type: Object,\n      default: () => ({\n        packages: ['corechart', 'table']\n      })\n    },\n    events: {\n      type: Object,\n      default: () => ({})\n    },\n    createChart: {\n      type: Function,\n      default: () => ({})\n    },\n    resizeDebounce: {\n      type: Number,\n      default: 200\n    }\n  },\n\n  data () {\n    return {\n      chartObject: null\n    }\n  },\n\n  watch: {\n    data: {\n      deep: true,\n      handler () {\n        this.drawChart()\n      }\n    },\n    options: {\n      deep: true,\n      handler () {\n        this.drawChart()\n      }\n    },\n    type (value) {\n      this.createChartObject()\n      this.drawChart()\n    }\n  },\n\n  mounted () {\n    loadGoogleCharts(this.version, this.settings).then(api => {\n      chartsLib = api\n      const chart = this.createChartObject()\n      this.$emit('ready', chart, api)\n      this.drawChart()\n    })\n    if (this.resizeDebounce > 0) window.addEventListener('resize', debounce(this.drawChart, this.resizeDebounce))\n  },\n\n  beforeDestroy () {\n    if (this.chartObject && typeof this.chartObject.clearChart === 'function') {\n      this.chartObject.clearChart()\n    }\n  },\n\n  methods: {\n    drawChart () {\n      if (!chartsLib || !this.chartObject) return\n      const data = this.getValidChartData()\n      if (data) this.chartObject.draw(data, this.options)\n    },\n\n    getValidChartData () {\n      if (this.data instanceof chartsLib.visualization.DataTable) return this.data\n      if (this.data instanceof chartsLib.visualization.DataView) return this.data\n      if (Array.isArray(this.data)) return chartsLib.visualization.arrayToDataTable(this.data)\n      if (this.data !== null && typeof this.data === 'object') return new chartsLib.visualization.DataTable(this.data)\n      return null\n    },\n\n    createChartObject () {\n      const createChart = (el, google, type) => {\n        if (!type) throw new Error('please, provide chart type property')\n        return new google.visualization[type](el)\n      }\n      const fn = this.createChart || createChart\n      this.chartObject = fn(this.$refs.chart, chartsLib, this.type)\n      this.attachListeners()\n      return this.chartObject\n    },\n\n    attachListeners () {\n      if (!this.events) return\n      Object.entries(this.events).forEach(([event, listener]) => {\n        chartsLib.visualization.events.addListener(this.chartObject, event, listener)\n      })\n    }\n  }\n}\n\n</script>\n","import loadGoogleCharts from './lib/google-charts-loader'\nimport GChart from './components/GChart.vue'\n\n// Install the components\nexport function install (Vue) {\n  Vue.component('GChart', GChart)\n}\n\n// Expose the components\nexport {\n  loadGoogleCharts,\n  GChart\n}\n\n/* -- Plugin definition & Auto-install -- */\n/* You shouldn't have to modify the code below */\n\n// Plugin\nconst plugin = {\n  /* eslint-disable no-undef */\n  version: VERSION,\n  install\n}\n\nexport default plugin\n\n// Auto-install\nlet GlobalVue = null\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue\n} else if (typeof global !== 'undefined') {\n  GlobalVue = global.Vue\n}\nif (GlobalVue) {\n  GlobalVue.use(plugin)\n}\n"],"names":["chartsScriptUrl","chartsLoaderPromise","loadedPackages","Map","getChartsLoader","window","google","charts","Promise","resolve","script","document","createElement","type","onload","src","body","appendChild","loadGoogleCharts","version","settings","then","loader","Error","settingsKey","JSON","stringify","Object","keys","sort","has","get","loaderPromise","load","setOnLoadCallback","set","chartsLib","name","props","String","required","data","Array","default","options","packages","events","createChart","Function","resizeDebounce","Number","chartObject","watch","deep","handler","drawChart","value","createChartObject","mounted","api","chart","$emit","addEventListener","debounce","beforeDestroy","clearChart","methods","getValidChartData","draw","visualization","DataTable","DataView","isArray","arrayToDataTable","el","fn","$refs","attachListeners","entries","forEach","event","listener","addListener","ref","_createElementBlock","_hoisted_1","install","Vue","component","GChart","plugin","VERSION","GlobalVue","global","use"],"mappings":"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"}